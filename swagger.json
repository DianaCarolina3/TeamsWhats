{
  "swagger": "2.0",
  "info": {
    "description": "TeamsWhats `Red social` es un proyecto en el cual integro diversas tecnologías. Proyecto construido en NodeJS con Express [(framework)](https://expressjs.com/), integra base de datos relacional (PostgreSQL), también registro de personas e inicio de sección con tokens (JsonWebTokens), los usuarios al iniciar sección pueden seguir a otro usuario, publicar posts, dar like a publicaciones e iniciar una conversación con otro usuario. El proyecto tiene base de datos en PostgreSQL y cache en Redis.`Documentación en Swagger`\n\n  Tools:\n  - PostgreSQL\n  - NodeJS\n  - ExpressJS\n  - JavaScript\n  - HTML\n  - Redis\n  - JsonWebTokens (JWT)\n  - swagger-ui-express\n",
    "version": "1.0.0",
    "title": "TeamsWhats",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Diana Carolina Campuzano Garzon",
      "url": "https://github.com/Dianacarolina3",
      "email": "dcaroli2015@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "https://teamswhats.deelo.cloud",
  "basePath": "/TeamsWhats",
  "tags": [
    {
      "name": "TeamsWhats",
      "description": "Acerca de TeamsWhats",
      "externalDocs": {
        "description": "Encuentra más",
        "url": "https://github.com/DianaCarolina3"
      }
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/users": {
      "get": {
        "tags": ["users"],
        "summary": "Usuarios",
        "description": "Trae todos los usuarios",
        "operationId": "findUsersBy",
        "produces": ["application/json"],
        "parameters": [],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/userPost"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Crear usuario",
        "operationId": "addPet",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Añade el usuario que necesita estar en base de datos",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "id, name, username"
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Actualiza usuario",
        "operationId": "updatePet",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Añade el usuario que necesita estar en base de datos",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userPut"
            }
          }
        ],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "id, name, username"
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW_Authenticate": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "No found"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["users"],
        "summary": "Find user by id",
        "description": "Returns a user",
        "operationId": "getPetById",
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "name": "usersID",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/userPost"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Delete user",
        "description": "This can only delete a user.",
        "operationId": "deleteUser",
        "produces": ["application/json"],
        "parameters": ["idUser"],
        "responses": {
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/follow/{id}": {
      "post": {
        "tags": ["user_follow"],
        "summary": "Create a follow",
        "description": "This can only create a follow.",
        "operationId": "createFollow",
        "produces": ["application/json"],
        "parameters": [
          {
            "id user": "id",
            "Bearer token": "auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Ok"
          }
        }
      },
      "delete": {
        "tags": ["user_follow"],
        "summary": "Delete a follow",
        "description": "This can only delete a follow.",
        "operationId": "deleteFollow",
        "produces": ["application/json"],
        "parameters": [
          {
            "id user": "id",
            "Bearer token": "auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/follow/": {
      "get": {
        "tags": ["user_follow"],
        "summary": "Get all follow_user",
        "description": "Get all follow_user",
        "operationId": "getFollow",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/follow/following/{id}": {
      "get": {
        "tags": ["user_follow"],
        "summary": "Get a following",
        "description": "This can only get following.",
        "operationId": "getFollow",
        "produces": ["application/json"],
        "parameters": [
          {
            "id user": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/follow/followers/{id}": {
      "get": {
        "tags": ["user_follow"],
        "summary": "Get a followers",
        "description": "This can only get followers.",
        "operationId": "getFollow",
        "produces": ["application/json"],
        "parameters": [
          {
            "id user": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "login user",
        "description": "This can only login user.",
        "operationId": "postAuth",
        "produces": ["application/json"],
        "parameters": [
          {
            "username": "body",
            "password": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/post": {
      "post": {
        "tags": ["post"],
        "summary": "Create post of user",
        "description": "This can only create post of user.",
        "operationId": "postPost",
        "produces": ["application/json"],
        "parameters": [
          {
            "username": "body",
            "text": "body",
            "image": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "created"
          }
        }
      },
      "get": {
        "tags": ["post"],
        "summary": "Get all post of user",
        "description": "This can only get all post of user.",
        "operationId": "getPost",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      },
      "put": {
        "tags": ["post"],
        "summary": "Updated post",
        "description": "This can only update a post.",
        "operationId": "putPost",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "username": "body",
            "text": "body",
            "image": "body",
            "bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Invalid token"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/post/{id}": {
      "get": {
        "tags": ["post"],
        "summary": "Get a post of user",
        "description": "This can only get a post of user.",
        "operationId": "getPost",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      },
      "delete": {
        "tags": ["post"],
        "summary": "Delete a post of user",
        "description": "This can only delete a post of user.",
        "operationId": "deletePost",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        }
      }
    },
    "/like/{id}": {
      "get": {
        "tags": ["post_like"],
        "summary": "Get a like of post",
        "description": "This can only get a like of post.",
        "operationId": "getLike",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      },
      "delete": {
        "tags": ["post_like"],
        "summary": "Delete a like of post",
        "description": "This can only delete a like of post.",
        "operationId": "deleteLike",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/like": {
      "get": {
        "tags": ["post_like"],
        "summary": "Get all like of post",
        "description": "This can only get all like of post.",
        "operationId": "getLike",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      },
      "post": {
        "tags": ["post_like"],
        "summary": "Delete a like of post",
        "description": "This can only delete a like of post.",
        "operationId": "deleteLike",
        "produces": ["application/json"],
        "parameters": [
          {
            "like_from_post": "body",
            "like_to_post": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/chat/{id}": {
      "post": {
        "tags": ["chat"],
        "summary": "Add a chat for id",
        "description": "This can only add a chat.",
        "operationId": "postChat",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      },
      "delete": {
        "tags": ["chat"],
        "summary": "Delete a chat",
        "description": "This can only delete a chat.",
        "operationId": "deleteChat",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/chat": {
      "get": {
        "tags": ["chat"],
        "summary": "Get all chat",
        "description": "This can only get all chat.",
        "operationId": "getChat",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/chat/conversations": {
      "get": {
        "tags": ["chat"],
        "summary": "Get all chat",
        "description": "This can only get all chat.",
        "operationId": "getChat",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/chat/conversations/{id}": {
      "get": {
        "tags": ["chat"],
        "summary": "Get a chat for id",
        "description": "This can only get a chat for id.",
        "operationId": "getChat",
        "produces": ["application/json"],
        "parameters": ["idChat"],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/message/{id}": {
      "post": {
        "tags": ["message"],
        "summary": "Add a message",
        "description": "This can only add a message.",
        "operationId": "postMessage",
        "produces": ["application/json"],
        "parameters": [
          {
            "username": "body",
            "message": "body",
            "file": "body",
            "id": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Ok"
          }
        }
      },
      "put": {
        "tags": ["message"],
        "summary": "Update a message",
        "description": "This can only update a message.",
        "operationId": "putMessage",
        "produces": ["application/json"],
        "parameters": [
          {
            "chat": "body",
            "username": "body",
            "message": "body",
            "file": "body",
            "id": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Ok"
          }
        }
      },
      "get": {
        "tags": ["message"],
        "summary": "Get a message",
        "description": "This can only get a message.",
        "operationId": "getMessage",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      },
      "delete": {
        "tags": ["message"],
        "summary": "Delete a message",
        "description": "This can only delete a message.",
        "operationId": "deleteMessage",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/message": {
      "get": {
        "tags": ["message"],
        "summary": "Get all message",
        "description": "This can only get all message.",
        "operationId": "getMessage",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BasicAuth": {
      "type": "basic"
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": ["placed", "approved", "delivered"]
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "userPut": {
      "type": "object",
      "required": ["id", "name", "password", "username"],
      "properties": {
        "id": {
          "type": "string",
          "example": "bgrc32q6Aj9BB2VvfR5Xg-t"
        },
        "name": {
          "type": "string",
          "example": "Diana"
        },
        "username": {
          "type": "string",
          "example": "Dianita"
        },
        "password": {
          "type": "string",
          "example": "123"
        }
      },
      "xml": {
        "name": "user"
      }
    },
    "userPost": {
      "type": "object",
      "required": ["name", "password", "username"],
      "properties": {
        "name": {
          "type": "string",
          "example": "Diana"
        },
        "username": {
          "type": "string",
          "example": "Dianita"
        },
        "password": {
          "type": "string",
          "example": "123"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "format": "int"
        },
        "body": {
          "type": "array"
        }
      }
    }
  },
  "responses": {
    "UnauthorizedError": {
      "description": "Authentication information is missing or invalid",
      "headers": {
        "WWW_Authenticate": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Encuentra más acerca de TeamsWhats",
    "url": "https://github.com/DianaCarolina3/TeamsWhats"
  }
}

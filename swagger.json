{
  "swagger": "2.0",
  "info": {
    "description": "TeamsWhats `Red social` es un proyecto en el cual integro diversas tecnologías. Proyecto construido en NodeJS con Express [(framework)](https://expressjs.com/), integra base de datos relacional (PostgreSQL), también registro de personas e inicio de sección con tokens (JsonWebTokens), los usuarios al iniciar sección pueden seguir a otro usuario, publicar posts, dar like a publicaciones e iniciar una conversación con otro usuario. El proyecto tiene base de datos en PostgreSQL y cache en Redis.`Documentación en Swagger`\n\n  Tools:\n  - PostgreSQL\n  - NodeJS\n  - ExpressJS\n  - JavaScript\n  - HTML\n  - Redis\n  - JsonWebTokens (JWT)\n  - swagger-ui-express\n",
    "version": "1.0.0",
    "title": "TeamsWhats",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Diana Campuzano",
      "url": "https://github.com/DianaCarolina3",
      "email": "dcaroli2015@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "teamswhats.onrender.com/teamswhats",
  "basePath": "/",
  "tags": [
    {
      "name": "TeamsWhats",
      "description": "Acerca de TeamsWhats",
      "externalDocs": {
        "description": "Encuentra más",
        "url": "https://github.com/DianaCarolina3/TeamsWhats"
      }
    }
  ],
  "schemes": ["https" ,"http"],
  "paths": {
    "/users": {
      "get": {
        "tags": ["users"],
        "summary": "Usuarios",
        "description": "Trae todos los usuarios",
        "operationId": "getUsers",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/users"
              }
            }
          },
          "400": {
            "description": "Error in request"
          }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Crear usuario",
        "operationId": "postUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Crear el usuario nuevo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/users_create"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/users"
            }
          },
          "400": {
            "description": "Error in create user"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["users"],
        "summary": "Usuarios por id",
        "description": "Encuentra un usuario por id",
        "operationId": "getUserById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id de usuario a retornar",
            "required": true,
            "type": "string",
            "format": "UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/users"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
        "put": {
          "tags": ["users"],
          "summary": "Actualiza usuario",
          "operationId": "putUser",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "description": "Id del usuario a actualizar",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "description": "Información de Usuario a actualizar (opcional: name, username, password)",
              "required": true,
              "schema": {
                "$ref": "#/definitions/users_create"
              }
            }
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Usuario actualizado correctamente",
              "schema": {
                "$ref": "#/definitions/users"
              }
            },
            "401": {
              "description": "Token inválido o no enviado",
              "headers": {
                "Authorization": {
                  "description": "Bearer token",
                  "type": "string"
                }
              }
            },
            "404": {
              "description": "Usuario no encontrado"
            }
          }
        },
      "delete": {
        "tags": ["users"],
        "summary": "Eliminar usuario",
        "description": "Eliminar un usuario por id.",
        "operationId": "deleteUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id de usuario a eliminar",
            "required": true,
            "type": "string",
            "format": "UUID"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "login user",
        "description": "Puede logearse un usuario.",
        "operationId": "postAuth",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Logear un usuario",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "Authorization": {
                "description": "Bearer token",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/follow/{id}": {
      "post": {
        "tags": ["user_follow"],
        "summary": "Seguir a un usuario",
        "description": "Permite seguir a otro usuario por su id.",
        "operationId": "postFollow",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id del usuario a seguir",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Follow creado correctamente",
            "schema": {
              "$ref": "#/definitions/user_follow"
            }
          },
          "401": {
            "description": "Invalid token"
          }
        }
      },
      "delete": {
        "tags": ["user_follow"],
        "summary": "Dejar de seguir a un usuario",
        "description": "Permite dejar de seguir a otro usuario por su id.",
        "operationId": "deleteFollow",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id del usuario a dejar de seguir",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Unfollow realizado correctamente"
          },
          "401": {
            "description": "Invalid Token"
          }
        }
      }
    },
    "/follow": {
      "get": {
        "tags": ["user_follow"],
        "summary": "Listar tabla follow",
        "description": "Obtiene toda la tabla de follow_user.",
        "operationId": "getFollow",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user_follow"
            }
          }
        }
      }
    },
    "/follow/following/{id}": {
      "get": {
        "tags": ["user_follow"],
        "summary": "Listar usuarios que sigo",
        "description": "Obtiene todos los usuarios que sigue el usuario dado.",
        "operationId": "getFollowing",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id del usuario",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/follow/followers/{id}": {
      "get": {
        "tags": ["user_follow"],
        "summary": "Listar seguidores",
        "description": "Obtiene todos los seguidores de un usuario dado.",
        "operationId": "getFollowers",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id del usuario",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/post": {
      "post": {
        "tags": ["post"],
        "summary": "Create post of user",
        "description": "This can only create post of user.",
        "operationId": "postPost",
        "produces": ["application/json"],
        "parameters": [
          {
            "username": "body",
            "text": "body",
            "image": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "created"
          }
        }
      },
      "get": {
        "tags": ["post"],
        "summary": "Get all post of user",
        "description": "This can only get all post of user.",
        "operationId": "getPost",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      },
      "put": {
        "tags": ["post"],
        "summary": "Updated post",
        "description": "This can only update a post.",
        "operationId": "putPost",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "username": "body",
            "text": "body",
            "image": "body",
            "bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Invalid token"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/post/{id}": {
      "get": {
        "tags": ["post"],
        "summary": "Get a post of user",
        "description": "This can only get a post of user.",
        "operationId": "getPost",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      },
      "delete": {
        "tags": ["post"],
        "summary": "Delete a post of user",
        "description": "This can only delete a post of user.",
        "operationId": "deletePost",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        }
      }
    },
    "/like/{id}": {
      "get": {
        "tags": ["post_like"],
        "summary": "Get a like of post",
        "description": "This can only get a like of post.",
        "operationId": "getLike",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      },
      "delete": {
        "tags": ["post_like"],
        "summary": "Delete a like of post",
        "description": "This can only delete a like of post.",
        "operationId": "deleteLike",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/like": {
      "get": {
        "tags": ["post_like"],
        "summary": "Get all like of post",
        "description": "This can only get all like of post.",
        "operationId": "getLike",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      },
      "post": {
        "tags": ["post_like"],
        "summary": "Delete a like of post",
        "description": "This can only delete a like of post.",
        "operationId": "deleteLike",
        "produces": ["application/json"],
        "parameters": [
          {
            "like_from_post": "body",
            "like_to_post": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/chat/{id}": {
      "post": {
        "tags": ["chat"],
        "summary": "Add a chat for id",
        "description": "This can only add a chat.",
        "operationId": "postChat",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      },
      "delete": {
        "tags": ["chat"],
        "summary": "Delete a chat",
        "description": "This can only delete a chat.",
        "operationId": "deleteChat",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/chat": {
      "get": {
        "tags": ["chat"],
        "summary": "Get all chat",
        "description": "This can only get all chat.",
        "operationId": "getChat",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/chat/conversations": {
      "get": {
        "tags": ["chat"],
        "summary": "Get all chat",
        "description": "This can only get all chat.",
        "operationId": "getChat",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/chat/conversations/{id}": {
      "get": {
        "tags": ["chat"],
        "summary": "Get a chat for id",
        "description": "This can only get a chat for id.",
        "operationId": "getChat",
        "produces": ["application/json"],
        "parameters": ["idChat"],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/message/{id}": {
      "post": {
        "tags": ["message"],
        "summary": "Add a message",
        "description": "This can only add a message.",
        "operationId": "postMessage",
        "produces": ["application/json"],
        "parameters": [
          {
            "username": "body",
            "message": "body",
            "file": "body",
            "id": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Ok"
          }
        }
      },
      "put": {
        "tags": ["message"],
        "summary": "Update a message",
        "description": "This can only update a message.",
        "operationId": "putMessage",
        "produces": ["application/json"],
        "parameters": [
          {
            "chat": "body",
            "username": "body",
            "message": "body",
            "file": "body",
            "id": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Ok"
          }
        }
      },
      "get": {
        "tags": ["message"],
        "summary": "Get a message",
        "description": "This can only get a message.",
        "operationId": "getMessage",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      },
      "delete": {
        "tags": ["message"],
        "summary": "Delete a message",
        "description": "This can only delete a message.",
        "operationId": "deleteMessage",
        "produces": ["application/json"],
        "parameters": [
          {
            "id": "body",
            "Bearer token": "auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/message": {
      "get": {
        "tags": ["message"],
        "summary": "Get all message",
        "description": "This can only get all message.",
        "operationId": "getMessage",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Ingrese el token con el prefijo 'Bearer {token}'"
    }
  },
  "definitions": {
    "users": {
      "type": "object",
      "required": ["name", "username", "password"],
      "properties": {
        "id": {
          "type": "string",
          "example": "4dee6a53-53d4-42d2-a535-50bd86372e57"
        },
        "name": {
          "type": "string",
          "example": "Diana Carolina"
        },
        "username": {
          "type": "string",
          "example": "dianis123"
        },
        "created_at": {
          "type": "string",
          "example": "2025-09-02T23:16:03.291Z"
        }
      },
      "xml": {
        "name": "users"
      }
    },
    "users_create": {
      "type": "object",
      "required": ["name", "username", "password"],
      "properties": {
        "name": {
          "type": "string",
          "example": "Juan Camilo"
        },
        "username": {
          "type": "string",
          "example": "camilo123"
        },
        "password": {
          "type": "string",
          "example": "1234"
        }
      },
      "xml": {
        "name": "users"
      }
    },
    "auth": {
      "type": "object",
      "required": ["username", "password"],
      "properties": {
        "username": {
          "type": "string",
          "example": "andresito"
        },
        "password": {
          "type": "string",
          "example": "1234"
        }
      },
      "xml": {
        "name": "auth"
      }
    },
    "user_follow" : {
      "type": "object",
      "required": [],
      "properties": {
        "id": {
          "type": "string",
          "example": "e9fa1f7c-1386-4fc2-b2fe-6d096cfe95c7"
        },
        "user_from": {
          "type": "string",
          "example": "627f85d0-c39d-463c-9ca9-319c5c116997"
        },
        "user_to": {
          "type": "string",
          "example": "4dee6a53-53d4-42d2-a535-50bd86372e57"
        },
        "created_at": {
          "type": "string",
          "example": "2025-09-04T17:51:26.389Z"
        }
      },
      "xml": {
        "name": "user_follow"
      }
    },
    "api_response": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number"
        },
        "body": {
          "type": "array"
        }
      }
    }
  }
}
